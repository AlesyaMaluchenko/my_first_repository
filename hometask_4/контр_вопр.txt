1. Как можно описать отношения родительского и дочернего классов?
Дочерний класс наследует атрибуты и методы родительского класса; также он может
переопределять методы родительского класса.
2. Каким образом работает обращение к методу через super()?
С помощью super() можно обращаться к атрибутам классов, стоящих над данным в
порядке наследования. Синтаксически это так: super().method_name(smth). Super
принимает два аргумента: первый это класс, к предкам которого мы хотим обратиться,
второй - объект, к которому хотим привязаться. Но часто super без аргументов.
3. Зачем нужна обработка исключений? В каких случаях ее использование некорректно?
Обработка исключений нужна, чтобы при возникновении ошибок, они перехватывались
и программа могла продолжить работу или корректно (или специфическим образом, например,
поругавшись) её завершить. Но есть так называемые критические ошибки, которые обрабатывать
некорректно. Среди них SyntaxError, RecursionError, Out of Memory Error. В таком случае
нужно написать нормальный (некостыльный) код.
4. Что нужно сделать, чтобы реализовать свое собственное исключение?
Нужно создать класс, который будет наследоваться от Exception (в иерархии классов исключений
он второй после BaseException наравне с ещё тремя, которые очень специфичны и редко исполь-
зуются). Функционал нашего класса можно расширить разными способами, в зависимости от задачи.
Затем уже в коде нужно реализовать блоки try, except для вылавливания конкретных ошибок.