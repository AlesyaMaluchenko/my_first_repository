1. Чем классовая переменная отличается от поля?
В какой ситуации можно через поле влиять на поля других экземпляров?
Классовая переменная и есть поле. Через поле можно влиять на поля других
экземпляров при помощи наследования. Потомок наследует поля предка, если в нём
прописано это поле отдельно. Тогда при изменении поля предка, меняется и поле потомка.
2. Как называется типизация в питоне и какой идеей она руководствуется?
Утиная типизация: если это выглядит как утка, плавает как утка и крякает как
утка, то это, вероятно, и есть утка.
Конкретный класс объекта не важен, важны свойства и методы, которыми он обладает.
Такой подход позволяет полиморфно работать с объектами, которые никак не связаны
друг с другом и могут быть объектами разных классов, главное, чобы эти объекты
поддерживали необходимый набор свойств и методов.
3. Каким образом мы реализуем полиморфизм для созданных нами объектов?
Например, через наследование. Производные классы сохраняют все характеристики своих
базовых классов и способны взаимодействовать с другими объектами под видом 
экземпляров базового класса. Также полиморфизм реализуется, когда мы применяем один
метод к объектам разных классов (например, __len__()). 


4. Зачем переопределять метод _radd_() наравне с _add_()?
Дело в том, что __add__() определяется нами для объекта конкретного класса 
(например, комплексных чисел), к которому  мы прибавляем какой-то другой объект 
(например, целое действительное число). Если мы хотим поменять местами слагаемые
(то есть прибавить к действительному числу комплексное), появиться ошибка. Если 
переопределить также __radd__(), то сложение произойдёт, и ошибки не будет.
