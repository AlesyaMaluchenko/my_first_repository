1. Какое количество процессов имеет смысл создавать в программе для параллельной работы?
Процессы идут параллельно засчёт нескольких независимых ядер компьютера. Количество параллельных
процессов должно быть на одно меньше, чем количество ядер, так как одно ядро нужно для самой
операционной системы. Если процессов больше, чем ядер, то будет конкуренция и общая скорость
работы может вообще уменьшиться. 
2. Какие проблемы могут возникнуть при записи результатов работы разных процессов в один файл (или печати в консоль)
Результаты записываются по мере завершения выполнения процессов, поэтому некоторые результаты могут перемешаться
и будет не понятно, какому процессу какой результат соответствует. 
3. Каким должно быть отношение времени выполнения различных параллельных процессов?
Времена выполнения должны быть хотя бы примерно одинаковыми, чтобы параллельное проведение
процессов было наиболее выгодным по времени.
4. Какие особенности работы функции Pool.map()?
Объект, который мы передаём в map() должен быть сериализуемым. Все возвращаемые значения упорядочиваются в точности
так, как они поступают на вход (решается проблема пункта 2).
